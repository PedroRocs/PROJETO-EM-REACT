{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LowCost\\\\Desktop\\\\Arquivos Proa\\\\PROJETOS\\\\Lembrete em React\\\\lembrete\\\\src\\\\components\\\\TodoForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction TodoForm(props) {\n  _s();\n\n  const [input, setInput] = useState(props.edit ? props.edit.value : '');\n  const inputRef = useRef(null);\n  useEffect(() => {\n    inputRef.current.focus();\n  });\n\n  const handleChange = e => {\n    setInput(e.target.value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    props.onSubmit({\n      id: Math.floor(Math.random() * 10000),\n      text: input\n    });\n    setInput('');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"todo-form\",\n    onSubmit: handleSubmit,\n    children: props.edit ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Add a todo\",\n        value: input,\n        name: \"text\",\n        className: \"todo-input edit\",\n        onChange: handleChange,\n        ref: inputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"todo-button edit\",\n        children: \"Atualize\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 1\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Add a todo\",\n        value: input,\n        name: \"text\",\n        className: \"todo-input\",\n        onChange: handleChange,\n        ref: inputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"todo-button\",\n        children: \"Adicione\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n}\n\n_s(TodoForm, \"Zz9RrNas3n7wfThZAB1gXOvJ9+8=\");\n\n_c = TodoForm;\nexport default TodoForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoForm\");","map":{"version":3,"sources":["C:/Users/LowCost/Desktop/Arquivos Proa/PROJETOS/Lembrete em React/lembrete/src/components/TodoForm.js"],"names":["React","useState","useEffect","useRef","TodoForm","props","input","setInput","edit","value","inputRef","current","focus","handleChange","e","target","handleSubmit","preventDefault","onSubmit","id","Math","floor","random","text"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,EAAoCC,MAApC,QAAiD,OAAjD;;;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAAA;;AACrB,QAAK,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAACI,KAAK,CAACG,IAAN,GAAaH,KAAK,CAACG,IAAN,CAAWC,KAAxB,GAA8B,EAA/B,CAAjC;AAEA,QAAMC,QAAQ,GAAGP,MAAM,CAAC,IAAD,CAAvB;AAEAD,EAAAA,SAAS,CAAC,MAAK;AACXQ,IAAAA,QAAQ,CAACC,OAAT,CAAiBC,KAAjB;AACH,GAFQ,CAAT;;AAIA,QAAMC,YAAY,GAAGC,CAAC,IAAI;AACtBP,IAAAA,QAAQ,CAACO,CAAC,CAACC,MAAF,CAASN,KAAV,CAAR;AACH,GAFD;;AAGA,QAAMO,YAAY,GAAGF,CAAC,IAAG;AACrBA,IAAAA,CAAC,CAACG,cAAF;AAEAZ,IAAAA,KAAK,CAACa,QAAN,CAAe;AACXC,MAAAA,EAAE,EAACC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,KAA3B,CADQ;AAEfC,MAAAA,IAAI,EAACjB;AAFU,KAAf;AAKAC,IAAAA,QAAQ,CAAC,EAAD,CAAR;AAEH,GAVD;;AAWA,sBACI;AAAM,IAAA,SAAS,EAAC,WAAhB;AAA4B,IAAA,QAAQ,EAAES,YAAtC;AAAA,cAEKX,KAAK,CAACG,IAAN,gBACb;AAAA,8BACA;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,WAAW,EAAC,YAA/B;AAA4C,QAAA,KAAK,EAAEF,KAAnD;AAA0D,QAAA,IAAI,EAAC,MAA/D;AAAsE,QAAA,SAAS,EAAC,iBAAhF;AAAkG,QAAA,QAAQ,EAAEO,YAA5G;AAA0H,QAAA,GAAG,EAAEH;AAA/H;AAAA;AAAA;AAAA;AAAA,cADA,eAIA;AAAQ,QAAA,SAAS,EAAC,kBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJA;AAAA,oBADa,gBASZ;AAAA,8BACD;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,WAAW,EAAC,YAA/B;AAA4C,QAAA,KAAK,EAAEJ,KAAnD;AAA0D,QAAA,IAAI,EAAC,MAA/D;AAAsE,QAAA,SAAS,EAAC,YAAhF;AAA6F,QAAA,QAAQ,EAAEO,YAAvG;AAAqH,QAAA,GAAG,EAAEH;AAA1H;AAAA;AAAA;AAAA;AAAA,cADC,eAIW;AAAQ,QAAA,SAAS,EAAC,aAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJX;AAAA;AAXO;AAAA;AAAA;AAAA;AAAA,UADJ;AAoBH;;GA3CQN,Q;;KAAAA,Q;AA6CT,eAAeA,QAAf","sourcesContent":["import React, {useState, useEffect, useRef} from 'react'\r\n\r\nfunction TodoForm(props) {\r\n    const[input, setInput] = useState(props.edit ? props.edit.value:'');\r\n    \r\n    const inputRef = useRef(null)\r\n\r\n    useEffect(()=> {\r\n        inputRef.current.focus()\r\n    })\r\n    \r\n    const handleChange = e => {\r\n        setInput(e.target.value);\r\n    };\r\n    const handleSubmit = e =>{\r\n        e.preventDefault();\r\n\r\n        props.onSubmit({\r\n            id:Math.floor(Math.random() * 10000),\r\n        text:input\r\n        })\r\n\r\n        setInput('');\r\n        \r\n    };\r\n    return (\r\n        <form className=\"todo-form\" onSubmit={handleSubmit}>\r\n            \r\n            {props.edit? (\r\n<>\r\n<input type=\"text\" placeholder=\"Add a todo\" value={input} name=\"text\" className=\"todo-input edit\" onChange={handleChange} ref={inputRef} />\r\n            \r\n            \r\n<button className='todo-button edit'>Atualize</button>\r\n</>\r\n)\r\n: \r\n(<> \r\n<input type=\"text\" placeholder=\"Add a todo\" value={input} name=\"text\" className=\"todo-input\" onChange={handleChange} ref={inputRef}></input>\r\n            \r\n            \r\n            <button className='todo-button'>Adicione</button>\r\n            </>)}\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default TodoForm\r\n"]},"metadata":{},"sourceType":"module"}